name: Pikabo Workflow
on: workflow_dispatch
jobs:
  Testing:
    runs-on: ubuntu-latest
    steps:
     - name: Code checkout
       uses: actions/checkout@v4

     - name: Maven test
       run: mvn test

     - name: Checkstyle
       run: mvn checkstyle:checkstyle

    # Setup java 11 to be default (sonar-scanner requirement as of 5.x)
     - uses: actions/setup-java@v3
       with:
        distribution: 'temurin' # See 'Supported distributions' for available options
        java-version: '11'
   
    # Setup sonar-scanner
     - name: Setup SonarQube
       uses: warchant/setup-sonar-scanner@v7
   
    # Run sonar-scanner
     - name: SonarQube Scan
       run: sonar-scanner
           -Dsonar.host.url=${{ secrets.SONAR_URL }}
           -Dsonar.login=${{ secrets.SONAR_TOKEN }}
           -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
           -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
           -Dsonar.sources=src/
           -Dsonar.junit.reportsPath=target/surefire-reports/ 
           -Dsonar.jacoco.reportsPath=target/jacoco.exec 
           -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml
           -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/

     - name: SonarQube Quality Gate check
       id: sonarqube-quality-gate-check
       uses: sonarsource/sonarqube-quality-gate-action@master
       # Force to fail step after specific time.
       timeout-minutes: 5
       env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_URL }} #OPTIONAL
    
  Build_And_Publish:
   needs: Testing
   runs-on: ubuntu-latest
   steps:
     - name: Code checkout
       uses: actions/checkout@v4

     - name: Set up QEMU
       uses: docker/setup-qemu-action@v3

     - name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v3

     - name: Login to Docker Hub
       uses: docker/login-action@v3
       with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

     - name: Build and push
       uses: docker/build-push-action@v5
       with:
          context: Docker-files/app/
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/actapp:${{ github.run_number }},${{ secrets.DOCKERHUB_USERNAME }}/actapp:latest 
